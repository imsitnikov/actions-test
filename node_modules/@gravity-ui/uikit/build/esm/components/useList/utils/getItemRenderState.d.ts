import type { QAProps } from '../../types';
import type { ListItemCommonProps, ListItemId, ListItemSize, ListParsedState, ListState, RenderItemContext, RenderItemProps } from '../types';
type ItemRendererProps<T> = Partial<ListState> & QAProps & ListParsedState<T> & {
    size?: ListItemSize;
    /**
     * Affects the view of the selected items
     */
    multiple?: boolean;
    /**
     * @default true
     *
     * Group expanded initial state
     */
    defaultExpanded?: boolean;
    id: ListItemId;
    mapItemDataToProps(data: T): ListItemCommonProps;
    onItemClick?(id: ListItemId): void;
};
/**
 * Map list state and parsed list state to item render props
 */
export declare const getItemRenderState: <T>({ qa, itemsById, disabledById, expandedById, groupsState, onItemClick, mapItemDataToProps, visibleFlattenIds, size, itemsState, selectedById, activeItemId, multiple, defaultExpanded, id, }: ItemRendererProps<T>) => {
    data: T;
    props: RenderItemProps;
    context: RenderItemContext;
};
export {};
