"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Picture = void 0;
const react_1 = __importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../../../utils/cn");
require("./Picture.css");
const b = (0, cn_1.block)('changelog-dialog-picture');
const SHOW_LOADER_TIMEOUT = 150;
function Picture({ className, src, alt = '', ratio }) {
    const [loadingState, setLoadingState] = react_1.default.useState('loading');
    const [isVisibleLoader, setIsVisibleLoader] = react_1.default.useState(false);
    react_1.default.useEffect(() => {
        setLoadingState('loading');
        setIsVisibleLoader(false);
        const img = new Image();
        img.onload = () => {
            setLoadingState('loaded');
        };
        img.onerror = img.onabort = () => {
            setLoadingState('error');
        };
        img.src = src;
        const timeoutId = setTimeout(() => {
            setIsVisibleLoader(true);
        }, SHOW_LOADER_TIMEOUT);
        return () => {
            clearTimeout(timeoutId);
        };
    }, [src]);
    if (loadingState === 'error') {
        return null;
    }
    return (react_1.default.createElement("div", { className: b(null, className) }, ratio ? (react_1.default.createElement("div", { className: b('placeholder'), style: loadingState === 'loading' ? { paddingBottom: `${ratio * 100}%` } : {} },
        isVisibleLoader && loadingState === 'loading' ? (react_1.default.createElement("div", { className: b('loader') },
            react_1.default.createElement(uikit_1.Loader, { size: "s" }))) : null,
        react_1.default.createElement("img", { className: b('image-with-ratio', {
                visible: loadingState === 'loaded',
            }), src: src, alt: alt }))) : (react_1.default.createElement("img", { className: b('image'), src: src, alt: alt }))));
}
exports.Picture = Picture;
