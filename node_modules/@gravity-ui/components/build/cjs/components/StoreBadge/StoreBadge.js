"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoreBadge = void 0;
const react_1 = __importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const AppStoreEn_1 = require("../../icons/stores/AppStoreEn");
const AppStoreRu_1 = require("../../icons/stores/AppStoreRu");
const GooglePlayEn_1 = require("../../icons/stores/GooglePlayEn");
const GooglePlayRu_1 = require("../../icons/stores/GooglePlayRu");
const cn_1 = require("../utils/cn");
const b = (0, cn_1.cn)('store-badge');
const androidPlatform = 'android';
const iosPlatform = 'ios';
const badgeData = {
    [iosPlatform]: {
        ru: AppStoreRu_1.AppStoreRu,
        en: AppStoreEn_1.AppStoreEn,
    },
    [androidPlatform]: {
        ru: GooglePlayRu_1.GooglePlayRu,
        en: GooglePlayEn_1.GooglePlayEn,
    },
};
const StoreBadge = (_a) => {
    var { platform, className, onClick, href, lang = uikit_1.Lang.En } = _a, restLinkProps = __rest(_a, ["platform", "className", "onClick", "href", "lang"]);
    // const lang = i18n.lang as Lang;
    const iconData = badgeData === null || badgeData === void 0 ? void 0 : badgeData[platform][lang];
    if (!iconData) {
        return null;
    }
    if (!href) {
        return (
        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/interactive-supports-focus
        react_1.default.createElement("div", { role: "button", onClick: onClick },
            react_1.default.createElement(uikit_1.Icon, { className: b(null, className), data: iconData })));
    }
    return (react_1.default.createElement(uikit_1.Link, Object.assign({ className: b(null, className), onClick: onClick, href: href, target: "_blank", rel: "noopener" }, restLinkProps),
        react_1.default.createElement(uikit_1.Icon, { data: iconData })));
};
exports.StoreBadge = StoreBadge;
