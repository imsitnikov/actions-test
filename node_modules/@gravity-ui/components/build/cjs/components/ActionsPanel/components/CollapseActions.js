"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollapseActions = void 0;
const react_1 = __importDefault(require("react"));
const icons_1 = require("@gravity-ui/icons");
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../../utils/cn");
const hooks_1 = require("./hooks");
require("./CollapseActions.css");
const b = (0, cn_1.block)('actions-panel-collapse');
const CollapseActions = ({ actions }) => {
    const { buttonActions, dropdownItems, parentRef, offset, visibilityMap } = (0, hooks_1.useCollapseActions)(actions);
    const showDropdown = Object.keys(visibilityMap).length > 0 && dropdownItems.length > 0;
    return (react_1.default.createElement("div", { className: b() },
        react_1.default.createElement("div", { className: b('container'), ref: parentRef }, buttonActions.map((action) => {
            const { id } = action;
            const attr = { [hooks_1.OBSERVER_TARGET_ATTR]: id };
            const invisible = visibilityMap[id] === false;
            const switcher = (react_1.default.createElement(uikit_1.Button, Object.assign({ view: "flat-contrast", size: "m" }, action.button.props)));
            const node = Array.isArray(action.dropdown.item.items) ? (react_1.default.createElement(uikit_1.DropdownMenu, { size: "s", items: action.dropdown.item.items, switcher: switcher })) : (switcher);
            return (react_1.default.createElement("div", Object.assign({ className: b('button-action-wrapper', { invisible }) }, attr, { key: id }), node));
        })),
        showDropdown && (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement("div", { className: b('menu-placeholder') }),
            react_1.default.createElement("div", { className: b('menu-wrapper'), style: { insetInlineStart: offset } },
                react_1.default.createElement(uikit_1.DropdownMenu, { size: "s", items: dropdownItems, switcher: react_1.default.createElement(uikit_1.Button, { view: "flat-contrast", size: "m" },
                        react_1.default.createElement(uikit_1.Icon, { data: icons_1.Ellipsis })) }))))));
};
exports.CollapseActions = CollapseActions;
