"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShareListItem = void 0;
const react_1 = __importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../../utils/cn");
const constants_1 = require("../constants");
const i18n_1 = require("../i18n");
const icons = __importStar(require("../icons"));
require("./ShareListItem.css");
const b = (0, cn_1.block)('share-list-item');
class ShareListItem extends react_1.default.PureComponent {
    render() {
        var _a;
        const _b = this.props, { type, direction, className, label, getShareLink } = _b, rest = __rest(_b, ["type", "direction", "className", "label", "getShareLink"]);
        const icon = this.props.icon || (type && icons[type]);
        const url = (_a = getShareLink === null || getShareLink === void 0 ? void 0 : getShareLink(rest)) !== null && _a !== void 0 ? _a : (type && this.getShareLink(type));
        const typeModifier = type === null || type === void 0 ? void 0 : type.toLowerCase();
        const name = label || (type && constants_1.ShareOptions[type]);
        if (!url) {
            return null;
        }
        if (direction === 'column') {
            return (react_1.default.createElement(uikit_1.Button, { view: "flat", size: "l", href: url, target: "_blank", width: "max", className: b(null, className), extraProps: { 'aria-label': (0, i18n_1.i18n)('label_share', { name }) } },
                icon && (react_1.default.createElement(uikit_1.Icon, { data: icon, size: 16, className: b('icon', { type: typeModifier }) })),
                name && react_1.default.createElement("span", { className: b(null, className) }, name)));
        }
        return (react_1.default.createElement(uikit_1.Button, { view: "flat", size: "l", href: url, target: "_blank", className: b(null, className), extraProps: { 'aria-label': (0, i18n_1.i18n)('label_share', { name }) } }, icon && react_1.default.createElement(uikit_1.Icon, { data: icon, size: 24, className: b('icon', { type: typeModifier }) })));
    }
    getShareLink(type) {
        const { url, title, text } = this.props;
        // https://github.com/bradvin/social-share-urls
        switch (type) {
            case constants_1.ShareOptions.Telegram:
                return this.getShareUrlWithParams('https://t.me/share/url', { url, text: title });
            case constants_1.ShareOptions.Facebook:
                return this.getShareUrlWithParams('https://facebook.com/sharer.php', { u: url });
            case constants_1.ShareOptions.Twitter:
                return this.getShareUrlWithParams('https://twitter.com/intent/tweet', {
                    url,
                    text: title,
                });
            case constants_1.ShareOptions.VK:
                return this.getShareUrlWithParams('https://vk.com/share.php', {
                    url,
                    title,
                    comment: text,
                });
            case constants_1.ShareOptions.LinkedIn:
                return this.getShareUrlWithParams('https://www.linkedin.com/sharing/share-offsite/', {
                    url,
                });
            case constants_1.ShareOptions.Mail:
                return this.getShareUrlWithParams('mailto:', {
                    subject: title,
                    body: text ? `${text}\n${url}` : url,
                });
            default:
                console.error(`Unknown share type: ${type}`);
                return null;
        }
    }
    getShareUrlWithParams(url, params = {}) {
        const result = new URL(url);
        Object.entries(params).forEach(([name, value]) => {
            if (value) {
                result.searchParams.set(name, value);
            }
        });
        return result.toString();
    }
}
exports.ShareListItem = ShareListItem;
