import React from 'react';
import { ListProps } from '@gravity-ui/uikit';
import './ItemSelector.css';
declare function getItemIdDefault<T>(item: T): string;
export interface ItemSelectorProps<T> {
    selectorTitle?: string;
    items: T[];
    value: string[];
    hideSelected?: boolean;
    hideSelectAllButton?: boolean;
    onUpdate: (value: string[]) => void;
    getItemId: (item: T) => string;
    renderItemValue?: (item: T) => React.ReactNode;
    renderItem?: ListProps<T>['renderItem'];
    filterItem?: ListProps<T>['filterItem'];
}
export declare class ItemSelector<T> extends React.Component<ItemSelectorProps<T>> {
    static defaultProps: {
        hideSelected: boolean;
        selectorTitle: string;
        getItemId: typeof getItemIdDefault;
    };
    renderItemTitle: (item: T) => React.ReactNode;
    renderItem: (item: T, active: boolean) => React.JSX.Element;
    filterItem: (filter: string) => (item: T) => boolean;
    renderValueItem: (item: T, active: boolean) => React.JSX.Element;
    getActualItems(): any[][];
    onAddItem: (item: T) => void;
    onRemoveItem: (item: T) => void;
    onErase: () => void;
    onSelectAll: () => void;
    onMoveItem: ({ oldIndex, newIndex }: {
        oldIndex: number;
        newIndex: number;
    }) => void;
    onUpdate: (value: string[]) => void;
    render(): React.JSX.Element;
}
export {};
