"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoriesLayout = exports.IndexType = void 0;
const react_1 = __importDefault(require("react"));
const icons_1 = require("@gravity-ui/icons");
const uikit_1 = require("@gravity-ui/uikit");
const __1 = require("..");
const cn_1 = require("../../../utils/cn");
const i18n_1 = require("../../i18n");
require("./StoriesLayout.css");
const b = (0, cn_1.block)('stories-layout');
var IndexType;
(function (IndexType) {
    IndexType[IndexType["Start"] = 1] = "Start";
    IndexType[IndexType["End"] = 2] = "End";
    IndexType[IndexType["InProccess"] = 3] = "InProccess";
    IndexType[IndexType["Single"] = 4] = "Single";
})(IndexType || (exports.IndexType = IndexType = {}));
// StoriesGroup component also use it
const StoriesLayout = (props) => {
    const currentStory = props.items[props.storyIndex];
    return (react_1.default.createElement("div", { className: b('wrap-outer') },
        react_1.default.createElement("div", { className: b('wrap-inner') },
            react_1.default.createElement("div", { className: b('container') },
                react_1.default.createElement("div", { className: b('left-pane') },
                    props.items.length > 1 && (react_1.default.createElement("div", { className: b('counter') },
                        react_1.default.createElement("span", { dir: "ltr" },
                            props.storyIndex + 1,
                            "\u00A0/\u00A0",
                            props.items.length))),
                    react_1.default.createElement("div", { className: b('text-block') }, currentStory && (react_1.default.createElement(react_1.default.Fragment, null,
                        currentStory.title && (react_1.default.createElement("div", { className: b('text-header') }, currentStory.title)),
                        currentStory.description && (react_1.default.createElement("div", { className: b('text-content') }, currentStory.description)),
                        currentStory.url && (react_1.default.createElement("div", { className: b('story-link-block') },
                            react_1.default.createElement(uikit_1.Link, { href: currentStory.url, target: '_blank' }, (0, i18n_1.i18n)('label_more'))))))),
                    react_1.default.createElement("div", { className: b('controls-block') },
                        IndexType.Single === props.indexType ? (react_1.default.createElement(uikit_1.Button, { onClick: props.handleButtonClose, size: "l", width: "max" }, (0, i18n_1.i18n)('label_close'))) : (react_1.default.createElement(react_1.default.Fragment, null,
                            IndexType.Start !== props.indexType && (react_1.default.createElement(uikit_1.Button, { onClick: props.handleGotoPrevious, view: "outlined", size: "l", width: "max" }, (0, i18n_1.i18n)('label_back'))),
                            IndexType.InProccess !== props.indexType && (react_1.default.createElement(uikit_1.Button, { onClick: props.handleButtonClose, size: "l", width: "max" }, (0, i18n_1.i18n)('label_close'))),
                            IndexType.End !== props.indexType && (react_1.default.createElement(uikit_1.Button, { onClick: props.handleGotoNext, view: "action", size: "l", width: "max" }, (0, i18n_1.i18n)('label_next'))))),
                        props.action && react_1.default.createElement(uikit_1.Button, Object.assign({ size: "l", width: "max" }, props.action)))),
                react_1.default.createElement("div", { className: b('right-pane') },
                    react_1.default.createElement(uikit_1.Button, { view: "flat", size: "l", className: b('close-btn'), onClick: props.handleButtonClose },
                        react_1.default.createElement(uikit_1.Icon, { data: icons_1.Xmark, size: 18 })),
                    (currentStory === null || currentStory === void 0 ? void 0 : currentStory.media) && (react_1.default.createElement("div", { className: b('media-block') },
                        react_1.default.createElement(__1.MediaRenderer, { media: currentStory.media }))))))));
};
exports.StoriesLayout = StoriesLayout;
