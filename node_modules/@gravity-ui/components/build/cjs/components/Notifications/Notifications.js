"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Notifications = void 0;
const react_1 = __importDefault(require("react"));
const InfiniteScroll_1 = require("../InfiniteScroll");
const cn_1 = require("../utils/cn");
const NotificationsEmptyState_1 = require("./NotificationsEmptyState");
const NotificationsErrorState_1 = require("./NotificationsErrorState");
const NotificationsList_1 = require("./NotificationsList");
const NotificationsLoadingState_1 = require("./NotificationsLoadingState");
const i18n_1 = require("./i18n");
require("./Notifications.css");
const b = (0, cn_1.block)('notifications');
exports.Notifications = react_1.default.memo(function Notifications(props) {
    var _a, _b;
    let content;
    const visibleNotificationsCount = props.notifications.filter((n) => !n.archived).length;
    const hasUnloadedNotifications = !props.areAllNotificationsLoaded && props.onLoadMoreNotifications;
    if (props.isLoading) {
        content = react_1.default.createElement(NotificationsLoadingState_1.NotificationsLoadingState, null);
    }
    else if (visibleNotificationsCount > 0 || hasUnloadedNotifications) {
        content = (react_1.default.createElement(InfiniteScroll_1.InfiniteScroll, { onActivate: (_a = props.onLoadMoreNotifications) !== null && _a !== void 0 ? _a : noop, disabled: (_b = props.areAllNotificationsLoaded) !== null && _b !== void 0 ? _b : true },
            react_1.default.createElement(NotificationsList_1.NotificationsList, { notifications: props.notifications, swipeThreshold: props.swipeThreshold })));
    }
    else if (props.errorContent) {
        content = (react_1.default.createElement(NotificationsErrorState_1.NotificationsErrorState, { image: props.errorImage, title: props.errorTitle, content: props.errorContent }));
    }
    else {
        content = (react_1.default.createElement(NotificationsEmptyState_1.NotificationsEmptyState, { image: props.emptyImage, title: props.emptyTitle, content: props.emptyContent }));
    }
    return (react_1.default.createElement("div", { className: b() },
        react_1.default.createElement("div", { className: b('head') },
            react_1.default.createElement("div", { className: b('head-title') }, props.title || (0, i18n_1.i18n)('title')),
            react_1.default.createElement("div", { className: b('actions') }, props.actions)),
        react_1.default.createElement("div", { className: b('body') }, content)));
});
async function noop() { }
