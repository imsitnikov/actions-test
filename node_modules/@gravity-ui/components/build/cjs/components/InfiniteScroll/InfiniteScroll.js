"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfiniteScroll = void 0;
const react_1 = __importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../utils/cn");
const useOnIntersected_1 = require("./hooks/useOnIntersected");
require("./InfiniteScroll.css");
const b = (0, cn_1.block)('infinite-scroll');
const InfiniteScroll = ({ onActivate, disabled, children, loader }) => {
    const [isActive, setIsActive] = react_1.default.useState(false);
    const [bottomRef, setBottomRef] = react_1.default.useState(null);
    const mounted = react_1.default.useRef(false);
    react_1.default.useEffect(() => {
        mounted.current = true;
        return () => {
            mounted.current = false;
        };
    }, []);
    (0, useOnIntersected_1.useOnIntersected)(bottomRef, () => {
        const handleFetchData = async () => {
            setIsActive(true);
            await onActivate();
            if (mounted.current) {
                setIsActive(false);
            }
        };
        if (!isActive && !disabled) {
            handleFetchData();
        }
    });
    const renderedLoader = loader || (react_1.default.createElement("div", { className: b('loader') },
        react_1.default.createElement(uikit_1.Loader, { size: "l" })));
    return (react_1.default.createElement(react_1.default.Fragment, null,
        children,
        isActive && renderedLoader,
        react_1.default.createElement("div", { className: b('intersector'), ref: setBottomRef })));
};
exports.InfiniteScroll = InfiniteScroll;
