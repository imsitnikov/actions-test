var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Icon, Lang, Link } from '@gravity-ui/uikit';
import { AppStoreEn } from '../../icons/stores/AppStoreEn';
import { AppStoreRu } from '../../icons/stores/AppStoreRu';
import { GooglePlayEn } from '../../icons/stores/GooglePlayEn';
import { GooglePlayRu } from '../../icons/stores/GooglePlayRu';
import { cn } from '../utils/cn';
const b = cn('store-badge');
const androidPlatform = 'android';
const iosPlatform = 'ios';
const badgeData = {
    [iosPlatform]: {
        ru: AppStoreRu,
        en: AppStoreEn,
    },
    [androidPlatform]: {
        ru: GooglePlayRu,
        en: GooglePlayEn,
    },
};
export const StoreBadge = (_a) => {
    var { platform, className, onClick, href, lang = Lang.En } = _a, restLinkProps = __rest(_a, ["platform", "className", "onClick", "href", "lang"]);
    // const lang = i18n.lang as Lang;
    const iconData = badgeData === null || badgeData === void 0 ? void 0 : badgeData[platform][lang];
    if (!iconData) {
        return null;
    }
    if (!href) {
        return (
        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/interactive-supports-focus
        React.createElement("div", { role: "button", onClick: onClick },
            React.createElement(Icon, { className: b(null, className), data: iconData })));
    }
    return (React.createElement(Link, Object.assign({ className: b(null, className), onClick: onClick, href: href, target: "_blank", rel: "noopener" }, restLinkProps),
        React.createElement(Icon, { data: iconData })));
};
