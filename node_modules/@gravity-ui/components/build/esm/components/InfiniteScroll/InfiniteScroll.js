import React from 'react';
import { Loader } from '@gravity-ui/uikit';
import { block } from '../utils/cn';
import { useOnIntersected } from './hooks/useOnIntersected';
import './InfiniteScroll.css';
const b = block('infinite-scroll');
export const InfiniteScroll = ({ onActivate, disabled, children, loader }) => {
    const [isActive, setIsActive] = React.useState(false);
    const [bottomRef, setBottomRef] = React.useState(null);
    const mounted = React.useRef(false);
    React.useEffect(() => {
        mounted.current = true;
        return () => {
            mounted.current = false;
        };
    }, []);
    useOnIntersected(bottomRef, () => {
        const handleFetchData = async () => {
            setIsActive(true);
            await onActivate();
            if (mounted.current) {
                setIsActive(false);
            }
        };
        if (!isActive && !disabled) {
            handleFetchData();
        }
    });
    const renderedLoader = loader || (React.createElement("div", { className: b('loader') },
        React.createElement(Loader, { size: "l" })));
    return (React.createElement(React.Fragment, null,
        children,
        isActive && renderedLoader,
        React.createElement("div", { className: b('intersector'), ref: setBottomRef })));
};
