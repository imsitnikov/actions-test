import React from 'react';
import { ArrowUpRightFromSquare } from '@gravity-ui/icons';
import { Dialog, Icon, Link, Loader } from '@gravity-ui/uikit';
import { block } from '../utils/cn';
import { ErrorContainer } from './components/ErrorContainer/ErrorContainer';
import { Item } from './components/Item/Item';
import { i18n } from './i18n';
import './ChangelogDialog.css';
const b = block('changelog-dialog');
let nextId = 1;
function getNextId() {
    return nextId++;
}
export function ChangelogDialog({ open, title = i18n('title'), fullListLink, items, disableBodyScrollLock = true, disableOutsideClick, onClose, onStoryClick, onLinkClick, onRetryClick, loading, error, }) {
    const idRef = React.useRef();
    idRef.current = idRef.current || getNextId();
    const dialogCaptionId = `changelog-dialog-title-${idRef.current}`;
    return (React.createElement(Dialog, { className: b(), open: open, onClose: onClose, disableBodyScrollLock: disableBodyScrollLock, disableOutsideClick: disableOutsideClick, "aria-labelledby": dialogCaptionId },
        React.createElement(Dialog.Header, { caption: title, id: dialogCaptionId }),
        fullListLink ? (React.createElement(Dialog.Body, { key: "full-list-link" },
            React.createElement(Link, { href: fullListLink, target: "_blank" },
                React.createElement("span", null, i18n('link_full_list')),
                React.createElement("span", { className: b('full-list-link-icon') },
                    React.createElement(Icon, { data: ArrowUpRightFromSquare, size: 14 }))))) : null,
        React.createElement(Dialog.Body, { key: "items", className: b('items-container') },
            loading && (React.createElement("div", { className: b('loading') },
                React.createElement(Loader, { size: 'm' }))),
            error && !loading && React.createElement(ErrorContainer, { error: error, onRetryClick: onRetryClick }),
            !error &&
                !loading &&
                (items.length > 0 ? (items.map((item, index) => (React.createElement(Item, { key: index, className: b('item'), data: item, onStoryClick: onStoryClick, onLinkClick: onLinkClick })))) : (React.createElement("div", { className: b('empty-placeholder') }, i18n('label_empty')))))));
}
