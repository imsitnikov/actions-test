import React from 'react';
import type { IconData, PopupPlacement } from '@gravity-ui/uikit';
import type { ShareListDefaultProps, ShareListProps } from './ShareList/ShareList';
import { LayoutDirection } from './constants';
import './SharePopover.css';
export declare const sharePopoverDefaultProps: SharePopoverDefaultProps;
interface SharePopoverDefaultProps extends ShareListDefaultProps {
    /** Web Share API setting (share options can be specified for non supported api case) */
    useWebShareApi: boolean;
    /** popover opening direction */
    placement: PopupPlacement;
    /** should open popover with hover */
    openByHover: boolean;
    /** should close popover when cursor is outside */
    autoclosable: boolean;
    /** delay before popover will be hidden when cursor is otside */
    closeDelay: number;
    /** control-icon size */
    iconSize: number;
    /** elements location direction */
    direction: LayoutDirection;
}
export interface SharePopoverProps extends ShareListProps, Partial<SharePopoverDefaultProps> {
    /** icon control mixin */
    iconClass?: string;
    /** tooltip mixin */
    tooltipClassName?: string;
    /** tooltip content mixin */
    tooltipContentClassName?: string;
    /** sitcher mixin */
    switcherClassName?: string;
    /** custom icon */
    customIcon?: IconData;
    /** icon title */
    buttonTitle?: string | React.ReactNode;
    /** custom onClick handler */
    onClick?: (event?: React.MouseEvent<HTMLSpanElement>) => void;
    /** custom copy link button title */
    copyTitle?: string | React.ReactNode;
    /** custom copy link button icon */
    copyIcon?: IconData;
    /** custom copy button render */
    renderCopy?: ({ url, title, icon, }: {
        url: string | undefined;
        title: string | React.ReactNode;
        icon: IconData;
    }) => React.ReactElement;
}
export declare const SharePopover: (props: SharePopoverProps) => React.JSX.Element;
export {};
