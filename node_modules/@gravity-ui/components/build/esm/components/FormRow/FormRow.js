import React from 'react';
import { block } from '../utils/cn';
import { FormRowFieldDescription } from './FormRowFieldDescription';
import { i18n } from './i18n';
import './FormRow.css';
const b = block('form-row');
const FormRowComponent = ({ className, label, labelHelpPopover, fieldId, required = false, children, direction = 'row', }) => {
    const LabelComponent = fieldId ? 'label' : 'span';
    return (React.createElement("div", { className: b({ direction }, className) },
        React.createElement("div", { className: b('left') },
            React.createElement(LabelComponent, { className: b('field-name'), htmlFor: fieldId ? fieldId : undefined },
                React.createElement("span", { className: b('field-name-text') }, label),
                required ? (React.createElement(React.Fragment, null,
                    "\u00A0",
                    React.createElement("sup", { className: b('required-mark'), "aria-label": i18n('label_required-field') }, "*"))) : null,
                labelHelpPopover ? (React.createElement(React.Fragment, null,
                    "\u00A0",
                    React.createElement("span", { className: b('help-popover') }, labelHelpPopover))) : null)),
        React.createElement("div", { className: b('right') }, children)));
};
FormRowComponent.displayName = 'FormRow';
export const FormRow = Object.assign(FormRowComponent, { FieldDescription: FormRowFieldDescription });
