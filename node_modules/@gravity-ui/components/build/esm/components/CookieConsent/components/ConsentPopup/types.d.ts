import type { ConsentType, Consents } from '../../ConsentManager';
import { CookieConsentBaseProps } from '../../types';
import { FoldableListItem } from '../FoldableList/types';
export declare enum ConsentPopupStep {
    Main = "main",
    Manage = "manage"
}
export interface ConsentPopupCookieListItem extends Pick<FoldableListItem, 'titleLabel' | 'link'> {
    type: `${ConsentType}`;
    title?: string;
    text?: string;
}
export interface ConsentPopupData {
    text?: string;
    policyLink?: string;
    policyLinkText?: string;
    buttonAcceptText?: string;
    buttonDeclineText?: string;
    buttonNecessaryText?: string;
    buttonConfirmText?: string;
    manageLabelText?: string;
    cookieList?: ConsentPopupCookieListItem[];
    onClose: () => void;
}
export type ConsentPopupProps = ConsentPopupData & CookieConsentBaseProps & {
    step?: `${ConsentPopupStep}`;
};
export interface HeaderProps {
    currentStep: `${ConsentPopupStep}`;
    initialStep: `${ConsentPopupStep}`;
    onClose: () => void;
    onChangeStep: (step: `${ConsentPopupStep}`) => () => void;
    isMobile?: boolean;
}
export interface FooterProps {
    currentStep: `${ConsentPopupStep}`;
    buttonAcceptText?: string;
    buttonNecessaryText?: string;
    buttonConfirmText?: string;
    onAction: (consents: Consents | 'All' | 'OnlyNecessary') => void;
    currentConsents: Consents;
}
