"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateField = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = tslib_1.__importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../../utils/cn");
const useDateFieldProps_1 = require("./hooks/useDateFieldProps");
const useDateFieldState_1 = require("./hooks/useDateFieldState");
require("./DateField.css");
const b = (0, cn_1.block)('date-field');
function DateField(_a) {
    var { className } = _a, props = tslib_1.__rest(_a, ["className"]);
    const state = (0, useDateFieldState_1.useDateFieldState)(props);
    const { inputProps } = (0, useDateFieldProps_1.useDateFieldProps)(state, props);
    const [isActive, setActive] = react_1.default.useState(false);
    const { focusWithinProps } = (0, uikit_1.useFocusWithin)({
        onFocusWithinChange(isFocusWithin) {
            setActive(isFocusWithin);
        },
    });
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: b(null, className), style: props.style }, focusWithinProps, { children: [(0, jsx_runtime_1.jsx)(uikit_1.TextInput, Object.assign({}, inputProps, { value: state.isEmpty && !isActive && props.placeholder ? '' : inputProps.value })), (0, jsx_runtime_1.jsx)("input", { type: "text", hidden: true, name: props.name, value: state.value ? state.value.toISOString() : '', 
                // Ignore React warning
                onChange: () => { } })] })));
}
exports.DateField = DateField;
