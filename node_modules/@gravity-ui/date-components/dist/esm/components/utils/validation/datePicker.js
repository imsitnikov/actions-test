import { i18n } from './i18n';
export function getValidationResult(value, minValue, maxValue, isDateUnavailable, timeZone, valueTitle = 'Value') {
    const rangeOverflow = value && maxValue && maxValue.isBefore(value);
    const rangeUnderflow = value && minValue && value.isBefore(minValue);
    const isUnavailable = (value && (isDateUnavailable === null || isDateUnavailable === void 0 ? void 0 : isDateUnavailable(value))) || false;
    const isInvalid = rangeOverflow || rangeUnderflow || isUnavailable;
    const errors = [];
    if (isInvalid) {
        if (rangeUnderflow) {
            errors.push(i18n('Value must be {minValue} or later.', {
                minValue: minValue.timeZone(timeZone).format(),
                value: valueTitle,
            }));
        }
        if (rangeOverflow) {
            errors.push(i18n('Value must be {maxValue} or earlier.', {
                maxValue: maxValue.timeZone(timeZone).format(),
                value: valueTitle,
            }));
        }
        if (isUnavailable) {
            errors.push(i18n('Selected date unavailable.'));
        }
    }
    return { isInvalid, errors };
}
