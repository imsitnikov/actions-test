import { __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { TextInput, useFocusWithin } from '@gravity-ui/uikit';
import { block } from '../../utils/cn';
import { useDateFieldProps } from './hooks/useDateFieldProps';
import { useDateFieldState } from './hooks/useDateFieldState';
import './DateField.css';
const b = block('date-field');
export function DateField(_a) {
    var { className } = _a, props = __rest(_a, ["className"]);
    const state = useDateFieldState(props);
    const { inputProps } = useDateFieldProps(state, props);
    const [isActive, setActive] = React.useState(false);
    const { focusWithinProps } = useFocusWithin({
        onFocusWithinChange(isFocusWithin) {
            setActive(isFocusWithin);
        },
    });
    return (_jsxs("div", Object.assign({ className: b(null, className), style: props.style }, focusWithinProps, { children: [_jsx(TextInput, Object.assign({}, inputProps, { value: state.isEmpty && !isActive && props.placeholder ? '' : inputProps.value })), _jsx("input", { type: "text", hidden: true, name: props.name, value: state.value ? state.value.toISOString() : '', 
                // Ignore React warning
                onChange: () => { } })] })));
}
